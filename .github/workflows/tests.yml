name: Tests

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.python-version == '3.12' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install pipenv
          pipenv install --python "${{ matrix.python-version }}" --dev --system --skip-lock
      - name: Lint with Mypy
        run: mypy crowdkit tests
      - name: Pre-Commit Check
        uses: pre-commit/action@v3.0.0
      - name: Test with pytest
        run: coverage run --source crowdkit -m pytest
      - name: Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: codecov
        if: matrix.python-version == '3.8'
      - name: Run MkDocs
        run: mkdocs build --strict
      - name: Build wheel
        run: python3 -m build --sdist --wheel .
      - name: Syntax Check Jupyter
        run: |
          jupyter nbconvert examples/*.ipynb --to python
          python3 -m compileall examples
      - name: Run Jupyter
        run: jupyter nbconvert --to html --TagRemovePreprocessor.remove_cell_tags pip --execute examples/Readability-Pairwise.ipynb examples/TlkAgg-Categorical.ipynb
      - name: Upload Jupyter
        uses: actions/upload-artifact@v4
        with:
          name: crowd-kit-jupyter
          path: examples/*.html
        if: matrix.python-version == '3.8'
      - name: Validate CITATION.cff
        uses: citation-file-format/cffconvert-github-action@2.0.0
        with:
          args: "--validate"
        if: matrix.python-version == '3.8'
